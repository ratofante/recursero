---
import { Icon } from 'astro-icon/components';

import ContainerBase from '@components/Container/ContainerBase.astro';
import MenuFooter from '@components/Menu/MenuFooter.astro';
import MenuSections from '@components/Menu/MenuSections.astro';

interface Props {
	classes?: string;
}

const { classes }: Props = Astro.props;
---

<div class:list={[classes]}>
	<div class="h-full border-r border-slate py-4">
		<div class="h-full flex flex-col justify-between pt-4 pb-8">
			<MenuSections />
			<MenuFooter classes="border-t border-gray pt-8 pb-8" />
		</div>
	</div>
</div>

<style></style>

<script>
	import useDispatchEvent from 'src/js/useDispatchEvent';
	import type { EventDetail } from 'src/types';

	const toggler = document.getElementById('menu-desktop-toggler') as HTMLElement | null;

	const expandMenu: EventDetail = {
		command: 'expand',
	};
	const collapseMenu: EventDetail = {
		command: 'collapse',
	};

	function collapseDesktopMenu() {
		useDispatchEvent('toggle-desktop-menu', collapseMenu);
		if (toggler && toggler.dataset) {
			toggler.dataset.state = 'collapsed';
		}
	}

	function expandDesktopMenu() {
		useDispatchEvent('toggle-desktop-menu', expandMenu);
		if (toggler && toggler.dataset) {
			toggler.dataset.state = 'expanded';
		}
	}

	function toggleDesktopMenu() {
		toggler?.dataset.state === 'expanded' ? collapseDesktopMenu() : expandDesktopMenu();
	}

	toggler?.addEventListener('click', toggleDesktopMenu);
</script>
