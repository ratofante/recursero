---
import { Icon } from 'astro-icon/components';

interface Props {
	name?: string;
	leadingIcon?: string;
	trailingIcon?: string;
}

const { name, leadingIcon, trailingIcon } = Astro.props;
---

<button
	class="navigation__button relative w-full cursor-pointer after:absolute after:-left-0 after:top-0 after:z-0 after:h-full after:w-full after:bg-violet-400 after:bg-opacity-0 after:transition-colors after:duration-100 after:content-[''] hover:after:bg-opacity-35"
>
	<div class="relative z-10 flex items-center justify-between gap-4 px-4 py-2">
		{
			leadingIcon && (
				<div class="dark:text-white dark:opacity-80">
					<Icon name={leadingIcon} width={22} height={22} />
				</div>
			)
		}
		<div class="mr-auto lg:text-sm xl:text-base dark:text-white dark:opacity-80">
			{name}
		</div>
		{
			trailingIcon && (
				<div class="trailing__icon transition-transform duration-100 dark:text-white dark:opacity-80">
					<Icon name={trailingIcon} width={18} height={18} />
				</div>
			)
		}
	</div>
</button>

<script>
	const navButtons = document.querySelectorAll('.navigation__button');
	navButtons.forEach((button) => {
		function onClick() {
			button.querySelector('.trailing__icon')?.classList.toggle('rotate-180');
		}
		button.addEventListener('click', onClick);
	});
</script>
